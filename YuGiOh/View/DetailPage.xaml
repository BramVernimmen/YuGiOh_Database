<Page x:Class="YuGiOh.View.DetailPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:YuGiOh.View"
      xmlns:vm="clr-namespace:YuGiOh.ViewModel" xmlns:system="clr-namespace:System;assembly=mscorlib"
      xmlns:conv="clr-namespace:YuGiOh.View.Converters"
      mc:Ignorable="d" 
      d:DesignHeight="770" d:DesignWidth="700"
      Title="DetailPage" Background="#202020">
    
    <Page.DataContext>
        <vm:DetailPageVM />
    </Page.DataContext>
    <!--https://stackoverflow.com/questions/17259280/how-do-you-change-background-for-a-button-mouseover-in-wpf-->
    <Page.Resources>
        <conv:InvisibleWhenNull x:Key="CollapseIfNull" />
        <SolidColorBrush x:Key="TextColor" Color="#DDDDDD" />
        <system:Double x:Key="FontSize">21</system:Double>
        <system:Double x:Key="NameFontSize">26</system:Double>
        <system:Double x:Key="TitleFontSize">28</system:Double>
        <system:Double x:Key="DescFontSize">15</system:Double>
        <Style x:Key="OnHoverBlack" TargetType="{x:Type Button}" >
            <Setter Property="Background" Value="#151515"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#303030"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
    </Page.Resources>
    
    <Grid>
        <Grid ShowGridLines="False">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="0.45*" />
                <RowDefinition Height="3*" />
                <RowDefinition Height="2*" />
            </Grid.RowDefinitions>



            <Button Grid.Column="1" Grid.Row="0" Content="Go Back" Click="Go_Back" 
                VerticalAlignment="Top" HorizontalAlignment="Center" Margin="10" FontSize="{StaticResource TitleFontSize}"
                    Style="{StaticResource OnHoverBlack}" />

            <!--<Image Grid.Column="0" Grid.RowSpan="2" Margin="10" Source="{Binding CurrentCard.ImageInfoArray[0].ImageUrl}" />-->

            <Button x:Name="ImageButton" Grid.Column="0" Grid.RowSpan="2" Style="{StaticResource OnHoverBlack}" Click="HideButton" >
                <Image Margin="10"   Source="{Binding CurrentCard.ImageInfoArray[0].ImageUrl}" />
            </Button>

            <!-- Card Info -->
            <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Vertical" >
                <!-- Card Name -->
                <TextBlock x:Name="CardName" Text="{Binding CurrentCard.Name, FallbackValue=This_Is_A_Test_Name}" 
                           FontSize="{StaticResource NameFontSize}" Foreground="{StaticResource TextColor}" 
                           Margin="15, 0, 10, 0" TextWrapping="WrapWithOverflow" />
                <Rectangle Fill="{StaticResource TextColor}" Height="1" 
                           Width="{Binding ElementName=CardName, Path=ActualWidth}"  Margin="15, 0, 5, 25" />
                
                
                <!-- Card Type -->
                <TextBlock x:Name="Type" Text="{Binding CurrentCard.CardType, FallbackValue=Card_Type, Mode=OneWay, StringFormat='Type: {0}'}" 
                           FontSize="{StaticResource FontSize}" Foreground="{StaticResource TextColor}" 
                           Margin="15, 0, 5, 0" TextWrapping="WrapWithOverflow"/>
                <Rectangle Fill="{StaticResource TextColor}" Height="1" 
                           Width="{Binding ElementName=Type, Path=ActualWidth}"  Margin="15, 0, 5, 10" />

                
                <!-- ArcheType -->
                <TextBlock x:Name="ArcheType" Text="{Binding CurrentCard.Archetype, FallbackValue=N/A, Mode=OneWay, StringFormat='Archetype: {0}'}" 
                           FontSize="{StaticResource FontSize}" Foreground="{StaticResource TextColor}" 
                           Margin="15, 10, 5, 0" TextWrapping="WrapWithOverflow"/>
                <Rectangle Fill="{StaticResource TextColor}" Height="1" 
                           Width="{Binding ElementName=ArcheType, Path=ActualWidth}"  Margin="15, 0, 5, 10" />
            
                <!-- Typing -->
                <TextBlock x:Name="Typing" Text="{Binding CurrentCard.Typing, FallbackValue=No_Typing, Mode=OneWay, StringFormat='Typing: {0}'}" 
                           FontSize="{StaticResource FontSize}" Foreground="{StaticResource TextColor}" 
                           Margin="15, 10, 5, 0" TextWrapping="WrapWithOverflow"/>
                <Rectangle Fill="{StaticResource TextColor}" Height="1" 
                           Width="{Binding ElementName=Typing, Path=ActualWidth}"  Margin="15, 0, 5, 10" />
                
                <!-- Monster card exclusives -->

                <!-- Attribute -->
                <TextBlock x:Name="Attribute" Text="{Binding CurrentCard.Attribute, FallbackValue=No_Attribute, Mode=OneWay, StringFormat='Attribute: {0}'}" 
                           FontSize="{StaticResource FontSize}" Foreground="{StaticResource TextColor}" 
                           Margin="15, 10, 5, 0" TextWrapping="WrapWithOverflow"
                           Visibility="{Binding CurrentCard.Attribute, Converter={StaticResource CollapseIfNull}, FallbackValue=Collapsed}"
                           />
                <Rectangle Fill="{StaticResource TextColor}" Height="1" 
                           Width="{Binding ElementName=Attribute, Path=ActualWidth}"  Margin="15, 0, 5, 10"
                           Visibility="{Binding ElementName=Attribute, Path=Visibility}"
                           />

                <!-- Level -->
                <TextBlock x:Name="Level" Text="{Binding CurrentCard.Level, FallbackValue=No_Level, Mode=OneWay, StringFormat='Level: {0}'}" 
                           FontSize="{StaticResource FontSize}" Foreground="{StaticResource TextColor}" 
                           Margin="15, 10, 5, 0" TextWrapping="WrapWithOverflow"
                           Visibility="{Binding CurrentCard.Level, Converter={StaticResource CollapseIfNull}, FallbackValue=Collapsed}"
                           />
                <Rectangle Fill="{StaticResource TextColor}" Height="1" 
                           Width="{Binding ElementName=Level, Path=ActualWidth}"  Margin="15, 0, 5, 10"
                           Visibility="{Binding ElementName=Level,Path=Visibility}"
                           />

                <!-- Attack -->
                <TextBlock x:Name="Attack" Text="{Binding CurrentCard.Attack, FallbackValue=No_Attack, Mode=OneWay, StringFormat='Attack: {0}'}" 
                           FontSize="{StaticResource FontSize}" Foreground="{StaticResource TextColor}" 
                           Margin="15, 10, 5, 0" TextWrapping="WrapWithOverflow"
                           Visibility="{Binding CurrentCard.Attack, Converter={StaticResource CollapseIfNull}, FallbackValue=Collapsed}"
                           />
                <Rectangle Fill="{StaticResource TextColor}" Height="1" 
                           Width="{Binding ElementName=Attack, Path=ActualWidth}"  Margin="15, 0, 5, 10"
                           Visibility="{Binding ElementName=Attack, Path=Visibility}"
                           />

                <!-- Defense -->
                <TextBlock x:Name="Defense" Text="{Binding CurrentCard.Defense, FallbackValue=No_Defense, Mode=OneWay, StringFormat='Defense: {0}'}" 
                           FontSize="{StaticResource FontSize}" Foreground="{StaticResource TextColor}" 
                           Margin="15, 10, 5, 0" TextWrapping="WrapWithOverflow"
                           Visibility="{Binding CurrentCard.Defense, Converter={StaticResource CollapseIfNull}, FallbackValue=Collapsed}"
                           />
                <Rectangle Fill="{StaticResource TextColor}" Height="1" 
                           Width="{Binding ElementName=Defense, Path=ActualWidth}"  Margin="15, 0, 5, 10"
                           Visibility="{Binding ElementName=Defense, Path=Visibility}"
                           />
                
               
                
            </StackPanel>
            
            
            
            
            <!-- Description -->
            <StackPanel Grid.Row="2" Grid.ColumnSpan="2" Margin="10, 0, 10, 0" Orientation="Vertical">
                
                <TextBlock  x:Name="Desc" Text="Description" FontSize="{StaticResource FontSize}" 
                    Foreground="{StaticResource TextColor}" />
                <Rectangle Grid.Row="3" Grid.Column="0" Fill="{StaticResource TextColor}" Height="1" 
                           Width="{Binding ElementName=Desc, Path=ActualWidth}"  />
                
                <TextBlock TextWrapping="WrapWithOverflow" Margin="0, 5, 15, 0"
                FontSize="{StaticResource DescFontSize}" Foreground="{StaticResource TextColor}"
                Text="{Binding CurrentCard.Description,FallbackValue=No_Description}" />
                
            </StackPanel>


            <Button x:Name="BigImageButton" Grid.ColumnSpan="2" Grid.RowSpan="3" Style="{StaticResource OnHoverBlack}" 
                    Visibility="Collapsed"  Click="HideBigImage" >
                
                <Image Margin="10" Source="{Binding CurrentCard.ImageInfoArray[0].ImageUrl}" />
                
            </Button>
            
        </Grid>
        
    </Grid>
    
</Page>
